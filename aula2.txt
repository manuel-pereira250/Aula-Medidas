
Guia de Unidades de Medida no CSS: Quando Usar Cada Uma

1. px (Pixels)

Uso recomendado

Para tamanhos fixos e precisos que não devem variar com o tamanho da tela ou do texto.
Ideal para BORDAS, MARGENS e tamanhos de elementos que precisam MANTER uma aparência CONSISTENTE.

Quando evitar

Quando você deseja que o design seja mais flexivel e adaptável a diferentes tamanhos de tela a configurações de acessibilidade.

Exemplo de uso:

html <div class="box">

</div>


css

.box {
    width: 300px; /* Largura fixa */
    height: 200px; /* Altura fixa */
    background-color: red;
}


2. em (Relative to Parent font size)

uso recomendado:

Quando você deseja que o tamanho de um elemento seja ralativo ao tamanho da fonte de seu elemento pai.
Ideal para criar layouts e tipografia que se adaptam ao tamanho do texto do pai.

Quando evitar:

se você precisa de consistência em relação ao tamanho da fonte em toda a aplicação, independente da hierarquia de elementos.

exemplo de uso:

html

<div class="container">

    <div class="child">

    </div>

</div>

css

.container{
    font-size: 16px; /* tamanho base - pai */
}

.child {
    font0size: 1.5em; /* 1.5 vezes o tamanho da font do pai (24px) */
}

3. rem (Relativo to Root Font Size)

Uso recomendado:

Para criar tamanho de fonte e espaçamentos constentes em toda a aplicação, baseando-se no tamanho da fonte raiz (<html>).

Ideal para layouts e tipografia que precisam ser consistentes independentemente do tamanho da fonte dos elementos pais.

Quando evitar:

Quando você quer um tamanho que seja relativo apenas ao elemento pai especifico e não à raiz.

Exemplo de uso:

html

<div class="container">

    <div class="text">

        <p> lorem </p>

    </div>

</div>

css

html {
    font-size: 16px /* Tamanho base da fonte
    */
}
.text {
    font-size: 2rem; /* 32px (2 * 16px)
    */
}

4. vh (Viewport Height)

Uso recomendado:

Para definir tamanhos de altura relativos à altura da viewport, como para criar seções de tela cheia ou elementos que devem ocupar um porcentagem da altura da tela.
Ideal para layouts que devem se ajustar à altura da tela do usuário.

Quando evitar:

Para elementos que não precisam ser sensiveis ao tamanho da viewport e devem ter tamanhos fixos ou porpocionais ao conteúdo.

exemplo de uso:

html

<section class="fullscreen-section">

    <p> lorem </p>
    
</section>

testar em tamanhos de telas diferentes.

css

.fullscren-section {
    height: 100vh /* 100% da altura da viewport */
    width: 50vw
    background-color: black;
}

5. vw (Viewport Width)

Uso recomendado:

Para definir tamanhos de largura relativos à largura da viewport, útil para criar layouts responsivos ou elementos que devem ajustar a largura da tela.
Ideal para elementos que precisam ocupar uma porcentagem da largura da tela do usuário.

Quando evitar:
Para elementos cuja largura não deve depender da largura da viewport e deve ser fixa ou proporcional ao conteúdo.

exemplo de uso:

html
<section class="responsive-element">
    <p> lorem</p>
</section>

css

.responsive-element {
    width: 50vw; /* 50% da largura da viewport */
    height: 50vh;
    background-color: yellow;
}
